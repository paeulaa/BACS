main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
d1 <- rnorm(n=500, mean=45, sd=5)
# Let’s plot the density function of d123
plot(density(d1), col="blue", lwd=2,
main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
d1 <- rnorm(n=500, mean=25, sd=5)
# Let’s plot the density function of d123
plot(density(d1), col="blue", lwd=2,
main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
d1 <- rnorm(n=500, mean=30, sd=5)
# Let’s plot the density function of d123
plot(density(d1), col="blue", lwd=2,
main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
d1 <- rnorm(n=500, mean=45, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=15, sd=5)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
# Three normally distributed data sets
d1 <- rnorm(n=500, mean=45, sd=5)
d2 <- rnorm(n=200, mean=30, sd=2)
d3 <- rnorm(n=100, mean=15, sd=2)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#1a.
# Three normally distributed data sets
d1 <- rnorm(n=500, mean=45, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=15, sd=5)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
rdata <- rnorm(n=2000, mean=0, sd=1)
plot(density(rdata), col="blue", lwd=2, main = "random dataset")
abline(v=sd(rdata), lty="dashed")
rdata <- rnorm(n=2000, mean=0, sd=1)
plot(density(rdata), col="blue", lwd=2, main = "random dataset")
abline(v=mean(rdata)-sd(rdata), lty="dashed")
abline(v=mean(rdata))
rdata <- rnorm(n=2000, mean=0, sd=1)
plot(density(rdata), col="blue", lwd=2, main = "random dataset")
abline(v=mean(rdata))
abline(v=mean(rdata)-sd(rdata), lty="dashed")
abline(v=mean(rdata)+sd(rdata), lty="dashed")
abline(v=mean(rdata)-2sd(rdata), lty="dashed")
abline(v=mean(rdata)+2sd(rdata), lty="dashed")
abline(v=mean(rdata)-3sd(rdata), lty="dashed")
abline(v=mean(rdata)+3sd(rdata), lty="dashed")
rdata <- rnorm(n=2000, mean=0, sd=1)
plot(density(rdata), col="blue", lwd=2, main = "random dataset")
abline(v=mean(rdata))
abline(v=mean(rdata)-sd(rdata), lty="dashed")
abline(v=mean(rdata)+sd(rdata), lty="dashed")
abline(v=mean(rdata)-2*sd(rdata), lty="dashed")
abline(v=mean(rdata)+2*sd(rdata), lty="dashed")
abline(v=mean(rdata)-3*sd(rdata), lty="dashed")
abline(v=mean(rdata)+3*sd(rdata), lty="dashed")
first_quartile = quantile(rdata)
quartiles = quantile(rdata)
quartiles = quantile(rdata)
quartiles
quartiles[2:4]
quartiles[2:4]/sd(rdata)
new_rdata <- rnorm(n=2000, mean=35, sd=3.5)
new_quartiles = quantile(new_rdata)
new_quartiles[2:4]/sd(new_rdata)
new_quartiles[2]/sd(new_rdata)
new_quartiles[4]/sd(new_rdata)
sd(new_rdata)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
d123_quartiles = quantile(d123)
d123_quartiles[2]/sd(d123)
d123_quartiles[4]/sd(d123)
rand_data <- rnorm(800, mean=20, sd = 5)
k <- log2(n)+1
h <- (max(rand_data) - min(rand_data))/k
rand_data <- rnorm(800, mean=20, sd = 5)
k <- log2(800)+1
h <- (max(rand_data) - min(rand_data))/k
rand_data <- rnorm(800, mean=20, sd = 5)
k <- log2(800)+1
h <- (max(rand_data) - min(rand_data))/k
k
h
h <- 3.49*sd(rand_data)/800^(1/3)
k <- ceiling(max(rand_data) - min(rand_data)/h)
k
h
length(rand_data)
h <- 2*IQR(rand_data)/length(rand_data)^(1/3)
h
h <- 2*IQR(rand_data)/length(rand_data)^(1/3)
k <- ceiling(max(rand_data) - min(rand_data)/h)
h
k
h_3 <- 2*IQR(rand_data)/length(rand_data)^(1/3)
k_3 <- ceiling(max(rand_data) - min(rand_data)/h)
k_3
h_3
vect <- c(h_1, h_2, h_3)
new_vect <- c(h1, h2, h3)
rand_data <- rnorm(800, mean=20, sd = 5)
#Sturges' formula
k_1 <- log2(length(rand_data))+1
h_1 <- (max(rand_data) - min(rand_data))/k_1
k_1
h_1
#Scott’s normal reference rule
h_2 <- 3.49*sd(rand_data)/length(rand_data)^(1/3)
k_2 <- ceiling(max(rand_data) - min(rand_data)/h_2)
k_2
h_2
#Freedman-Diaconis’ choice
h_3 <- 2*IQR(rand_data)/length(rand_data)^(1/3)
k_3 <- ceiling(max(rand_data) - min(rand_data)/h_3)
k_3
h_3
#3c
out_data <- c(rand_data, runif(10, min=40, max=60))
data <- c(rand_data, out_data)
#(a)
k1 <- log2(length(data))+1
h1 <- (max(data) - min(data))/k1
#(b)
h2 <- 3.49*sd(data)/length(data)^(1/3)
#(c)
h3 <- 2*IQR(data)/length(data)^(1/3)
vect <- c(h_1, h_2, h_3)
new_vect <- c(h1, h2, h3)
vect
new_vect
e rule
h_2 <- 3.49*sd(rand_data)/length(rand_data)^(1/3)
k_2 <- ceiling(max(rand_data) - min(rand_data)/h_2)
k_2
h_2
h2 <- 3.49*sd(data)/length(data)^(1/3)
vect
new_vect
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_list)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head()
head(flag_colors)
lapply(flags_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range())
lapply(flag_shapes, range(flag_shapes))
lapply(flag_shapes, range(min.max)
lapply(flag_shapes, range(min.max)
skip()
shape_mat <- sapply(flag_shapes,range)
shape_mat
class()
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(unique_vals, unique)
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
#1a.
d1 <- rnorm(n=500, mean=45, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=15, sd=5)
d123 <- c(d1, d2, d3)
plot(density(d123), col="blue", lwd=2, main = "Distribution 2")
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
mean(d123)
median(d123)
d1_ <- rnorm(n=500, mean=30, sd=5)
plot(density(d1), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
mean(d_)
median(d_)
d1_ <- rnorm(n=500, mean=30, sd=5)
plot(density(d1), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
mean(d1_)
median(d1_)
d1_ <- rnorm(n=800, mean=30, sd=5)
plot(density(d1), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
mean(d1_)
median(d1_)
d1_ <- rnorm(n=800, mean=30, sd=5)
plot(density(d1), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(d1))
abline(v=median(d1), lty="dashed")
mean(d1_)
median(d1_)
d1_ <- rnorm(n=800, mean=30, sd=5)
plot(density(d1_), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(d1_))
abline(v=median(d1_), lty="dashed")
mean(d1_)
median(d1_)
#1a.
d1 <- rnorm(n=500, mean=45, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=15, sd=5)
d123 <- c(d1, d2, d3)
plot(density(d123), col="blue", lwd=2, main = "Distribution 2")
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
mean(d123)
median(d123)
rdata <- rnorm(n=2000, mean=0, sd=1)
plot(density(rdata), col="blue", lwd=2, main = "random dataset")
abline(v=mean(rdata))
abline(v=mean(rdata)-sd(rdata), lty="dashed")
abline(v=mean(rdata)+sd(rdata), lty="dashed")
abline(v=mean(rdata)-2*sd(rdata), lty="dashed")
abline(v=mean(rdata)+2*sd(rdata), lty="dashed")
abline(v=mean(rdata)-3*sd(rdata), lty="dashed")
abline(v=mean(rdata)+3*sd(rdata), lty="dashed")
rdata <- rnorm(n=2000, mean=0, sd=1)
plot(density(rdata), col="blue", lwd=2, main = "random dataset")
abline(v=mean(rdata), lwd = 2)
abline(v=mean(rdata)-sd(rdata), lty="dashed")
abline(v=mean(rdata)+sd(rdata), lty="dashed")
abline(v=mean(rdata)-2*sd(rdata), lty="dashed")
abline(v=mean(rdata)+2*sd(rdata), lty="dashed")
abline(v=mean(rdata)-3*sd(rdata), lty="dashed")
abline(v=mean(rdata)+3*sd(rdata), lty="dashed")
quartiles = quantile(rdata)
#(1)
quartiles[2:4]
#(2)
quartiles[2:4]/sd(rdata)
quartiles[2:4]
quantile(rdata,0.5)
quartiles = quantile(rdata)
#(1)
quartiles[2:4]
#(2)
[quartiles[2:4]-mean(rdata)]/sd(rdata)
(quartiles[2:4]-mean(rdata))/sd(rdata)
new_rdata <- rnorm(n=2000, mean=35, sd=3.5)
new_quartiles = quantile(new_rdata)
(new_quartiles[2]-mean(rdata))/sd(new_rdata)
(new_quartiles[4]-mean(rdata))/sd(new_rdata)
new_rdata <- rnorm(n=2000, mean=35, sd=3.5)
new_quartiles = quantile(new_rdata)
(new_quartiles[2]-mean(new_rdata))/sd(new_rdata)
(new_quartiles[4]-mean(new_rdata))/sd(new_rdata)
quartiles = quantile(rdata)
#(1)
quartiles[2:4]
#(2)
(quartiles[2:4]-mean(rdata))/sd(rdata)
#2c
new_rdata <- rnorm(n=2000, mean=35, sd=3.5)
new_quartiles = quantile(new_rdata)
(new_quartiles[2]-mean(new_rdata))/sd(new_rdata)
(new_quartiles[4]-mean(new_rdata))/sd(new_rdata)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
d123_quartiles = quantile(d123)
(d123_quartiles[2]-mean(d123))/sd(d123)
(d123_quartiles[4]-mean(d123))/sd(d123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
d123_quartiles = quantile(d123)
(d123_quartiles[2]-mean(d123))/sd(d123)
(d123_quartiles[4]-mean(d123))/sd(d123)
rand_data <- rnorm(800, mean=20, sd = 5)
#Sturges' formula
k_1 <- log2(length(rand_data))+1
h_1 <- (max(rand_data) - min(rand_data))/k_1
k_1
h_1
#Scott’s normal reference rule
h_2 <- 3.49*sd(rand_data)/length(rand_data)^(1/3)
k_2 <- ceiling(max(rand_data) - min(rand_data)/h_2)
k_2
h_2
#Freedman-Diaconis’ choice
h_3 <- 2*IQR(rand_data)/length(rand_data)^(1/3)
k_3 <- ceiling(max(rand_data) - min(rand_data)/h_3)
k_3
h_3
rand_data <- rnorm(800, mean=20, sd = 5)
#Sturges' formula
k_1 <- log2(length(rand_data))+1
h_1 <- (max(rand_data) - min(rand_data))/k_1
k_1
h_1
k_1 <- ceiling(log2(length(rand_data))+1)
h_1 <- (max(rand_data) - min(rand_data))/k_1
k_1
h_1
h_2 <- 3.49*sd(rand_data)/length(rand_data)^(1/3)
k_2 <- ceiling(max(rand_data) - min(rand_data)/h_2)
k_2
h_2
h_3 <- 2*IQR(rand_data)/length(rand_data)^(1/3)
k_3 <- ceiling(max(rand_data) - min(rand_data)/h_3)
k_3
h_3
h_2 <- 3.49*sd(rand_data)/(length(rand_data)^(1/3))
k_2 <- ceiling(max(rand_data) - min(rand_data)/h_2)
k_2
h_2
h_3 <- 2*IQR(rand_data)/(length(rand_data)^(1/3))
k_3 <- ceiling(max(rand_data) - min(rand_data)/h_3)
k_3
h_3
h <- 3.5*sd(rdm2)/(length(rdm2)^1/3)
ceiling((max(rdm2) - min(rdm2))/h)
h <- 3.5*sd(rand_data)/(length(rand_data)^1/3)
ceiling((max(rand_data) - min(rand_data))/h)
h <- 3.5*sd(rand_data)/(length(rand_data)^(1/3))
ceiling((max(rand_data) - min(rand_data))/h)
h0 <- 3.5*sd(rand_data)/(length(rand_data)^(1/3))
ceiling((max(rand_data) - min(rand_data))/h0)
h0 <- 3.49*sd(rand_data)/(length(rand_data)^(1/3))
ceiling((max(rand_data) - min(rand_data))/h0)
ceiling(max(rand_data) - min(rand_data)/h_2)
h_2 <- 3.49*sd(rand_data)/(length(rand_data)^(1/3))
#k_2 <-
ceiling(max(rand_data) - min(rand_data)/h_2)
h_2 <- 3.49*sd(rand_data)/(length(rand_data)^(1/3))
#k_2 <-
ceiling((max(rand_data) - min(rand_data))/h_2)
h_3 <- 2*IQR(rand_data)/(length(rand_data)^(1/3))
k_3 <- ceiling((max(rand_data) - min(rand_data))/h_3)
k_3
h_3
out_data <- c(rand_data, runif(10, min=40, max=60))
data <- c(rand_data, out_data)
#(a)
k1 <- log2(length(data))+1
h1 <- ceiling((max(data) - min(data))/k1)
#(b)
h2 <- 3.49*sd(data)/length(data)^(1/3)
#(c)
h3 <- 2*IQR(data)/length(data)^(1/3)
vect <- c(h_1, h_2, h_3)
new_vect <- c(h1, h2, h3)
vect
new_vect
out_data <- c(rand_data, runif(10, min=40, max=60))
data <- c(rand_data, out_data)
#(a)
k1 <- log2(length(data))+1
h1 <- ceiling((max(data) - min(data))/k1)
#(b)
h2 <- 3.49*sd(data)/(length(data)^(1/3))
#(c)
h3 <- 2*IQR(data)/(length(data)^(1/3))
vect <- c(h_1, h_2, h_3)
new_vect <- c(h1, h2, h3)
vect
new_vect
#out_data <- c(rand_data, runif(10, min=40, max=60))
_data <- c(rand_data, runif(10, min=40, max=60))
data <- c(rand_data, out_data)
#(a)
#k1 <- log2(length(data))+1
h1 <- ceiling((max(_data) - min(_data))/k1)
#(b)
h2 <- 3.49*sd(_data)/(length(_data)^(1/3))
#(c)
h3 <- 2*IQR(_data)/(length(_data)^(1/3))
vect <- c(h_1, h_2, h_3)
new_vect <- c(h1, h2, h3)
vect
new_vect
#out_data <- c(rand_data, runif(10, min=40, max=60))
odata <- c(rand_data, runif(10, min=40, max=60))
data <- c(rand_data, out_data)
#(a)
#k1 <- log2(length(data))+1
h1 <- ceiling((max(odata) - min(odata))/k1)
#(b)
h2 <- 3.49*sd(odata)/(length(odata)^(1/3))
#(c)
h3 <- 2*IQR(odata)/(length(odata)^(1/3))
vect <- c(h_1, h_2, h_3)
new_vect <- c(h1, h2, h3)
vect
new_vect
out_data <- c(rand_data, runif(10, min=40, max=60))
#(a)
#k1 <- log2(length(data))+1
h1 <- ceiling((max(out_data) - min(out_data))/k1)
#(b)
h2 <- 3.49*sd(out_data)/(length(out_data)^(1/3))
#(c)
h3 <- 2*IQR(out_data)/(length(out_data)^(1/3))
c(h_1, h_2, h_3)
c(h1, h2, h3)
k_1 <- ceiling(log2(length(rand_data))+1)
h_1 <- (max(rand_data) - min(rand_data))/k_1
k_1
h_1
#Scott’s normal reference rule
h_2 <- 3.49*sd(rand_data)/(length(rand_data)^(1/3))
k_2 <- ceiling((max(rand_data) - min(rand_data))/h_2)
k_2
h_2
#Freedman-Diaconis’ choice
h_3 <- 2*IQR(rand_data)/(length(rand_data)^(1/3))
k_3 <- ceiling((max(rand_data) - min(rand_data))/h_3)
k_3
h_3
out_data <- c(rand_data, runif(10, min=40, max=60))
#(a)
k1 <- log2(length(data))+1
h1 <- ceiling((max(out_data) - min(out_data))/k1)
#(b)
h2 <- 3.49*sd(out_data)/(length(out_data)^(1/3))
#(c)
h3 <- 2*IQR(out_data)/(length(out_data)^(1/3))
c(h_1, h_2, h_3)
c(h1, h2, h3)
out_data <- c(rand_data, runif(10, min=40, max=60))
#(a)
k1 <- log2(length(data))+1
h1 <- ceiling((max(out_data) - min(out_data))/k1)
#(b)
h2 <- (3.49*sd(out_data))/(length(out_data)^(1/3))
#(c)
h3 <- (2*IQR(out_data))/(length(out_data)^(1/3))
c(h_1, h_2, h_3)
c(h1, h2, h3)
out_data <- c(rand_data, runif(10, min=40, max=60))
#(a)
k1 <- ceiling(log2(length(data))+1)
h1 <- ceiling((max(out_data) - min(out_data))/k1)
#(b)
h2 <- 3.49*sd(out_data)/(length(out_data)^(1/3))
#(c)
h3 <- 2*IQR(out_data)/(length(out_data)^(1/3))
c(h_1, h_2, h_3)
c(h1, h2, h3)
out_data <- c(rand_data, runif(10, min=40, max=60))
#(a)
k1 <- ceiling(log2(length(data))+1)
h1 <- (max(out_data) - min(out_data))/k1
#(b)
h2 <- 3.49*sd(out_data)/(length(out_data)^(1/3))
#(c)
h3 <- 2*IQR(out_data)/(length(out_data)^(1/3))
c(h_1, h_2, h_3)
c(h1, h2, h3)
nclass.Sturges(out_data)
h <- (max(out_data)-min(out_data))/nclass.Sturges(out_data)
h
h <- 3.5*sd(out_data)/(length(out_data)^(1/3))
h
ceiling((max(out_data) - min(out_data))/h)
h <- 2*IQR(out_data)/(length(out_data)^(1/3))
h
ceiling((max(out_data) - min(out_data))/h)
